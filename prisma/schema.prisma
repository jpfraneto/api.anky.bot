// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  fid           String   @unique
  username      String?  @unique
  displayName   String?
  pfpUrl        String?
  gifUrl        String?

  // Relationships
  streams       Stream[]
  subscriptions Subscription[] @relation("Subscriber")
  subscribers   Subscription[] @relation("Streamer")
}

model Stream {
  streamId      String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  castHash      String?
  startedAt     DateTime?
  endedAt       DateTime?
  title         String?
  description   String?
  status        StreamStatus @default(LIVE)
  playbackId    String?    // Livepeer playback ID
  clipCreationIntervalId String?

  // Relationships
  user          User     @relation(fields: [fid], references: [fid])
  fid           String
  clips         Clip[]
}

model Subscription {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relationships
  subscriber    User     @relation("Subscriber", fields: [subscriberFid], references: [fid])
  subscriberFid String
  streamer      User     @relation("Streamer", fields: [streamerFid], references: [fid])
  streamerFid   String

  @@unique([subscriberFid, streamerFid])
  @@index([streamerFid])
}

model Clip {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  startTime     DateTime
  endTime       DateTime
  assetId       String   // Livepeer asset ID
  downloadUrl   String?
  gifUrl        String?
  cloudinaryUrl String?  // New field for Cloudinary URL
  clipIndex     Int      // New field to track the clip index
  status        ClipStatus @default(PROCESSING)

  // Relationships
  stream        Stream   @relation(fields: [streamId], references: [streamId])
  streamId      String
}

enum StreamStatus {
  SCHEDULED
  LIVE
  ENDED
}

enum ClipStatus {
  PROCESSING
  READY
  FAILED
}